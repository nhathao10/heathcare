import React, { useState } from 'react';
import './Chatbot.css';

const QUESTIONS = [
  {
    question: 'L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t l·ªãch kh√°m?',
    answer: 'B·∫°n c√≥ th·ªÉ v√†o trang ƒê·∫∑t L·ªãch Kh√°m, ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin v√† nh·∫•n ƒê·∫∑t L·ªãch Kh√°m. Sau khi ƒë·∫∑t th√†nh c√¥ng, b·∫°n s·∫Ω nh·∫≠n ƒë∆∞·ª£c m√£ ƒë·∫∑t l·ªãch ƒë·ªÉ tra c·ª©u.'
  },
  {
    question: 'T√¥i c·∫ßn mang theo g√¨ khi ƒëi kh√°m?',
    answer: 'B·∫°n n√™n mang theo gi·∫•y t·ªù t√πy th√¢n, th·∫ª b·∫£o hi·ªÉm y t·∫ø (n·∫øu c√≥) v√† c√°c gi·∫•y t·ªù li√™n quan ƒë·∫øn b·ªánh √°n tr∆∞·ªõc ƒë√≥.'
  },
  {
    question: 'L√†m sao ƒë·ªÉ tra c·ª©u th√¥ng tin ƒë·∫∑t l·ªãch?',
    answer: 'B·∫°n v√†o m·ª•c Tra c·ª©u th√¥ng tin ƒë·∫∑t l·ªãch, nh·∫≠p m√£ ƒë·∫∑t l·ªãch ƒë√£ nh·∫≠n ƒë∆∞·ª£c sau khi ƒë·∫∑t l·ªãch ƒë·ªÉ xem chi ti·∫øt.'
  },
  {
    question: 'Th·ªùi gian l√†m vi·ªác c·ªßa ph√≤ng kh√°m?',
    answer: 'Ph√≤ng kh√°m l√†m vi·ªác t·ª´ 7h00 ƒë·∫øn 17h00 c√°c ng√†y trong tu·∫ßn (tr·ª´ Ch·ªß nh·∫≠t v√† ng√†y l·ªÖ).'
  },
  {
    question: 'C√≥ th·ªÉ ƒë·ªïi l·ªãch kh√°m kh√¥ng?',
    answer: 'B·∫°n vui l√≤ng li√™n h·ªá hotline ho·∫∑c ƒë·∫øn tr·ª±c ti·∫øp ph√≤ng kh√°m ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ƒë·ªïi l·ªãch.'
  },
  {
    question: 'Ph√≤ng kh√°m c√≥ h·ªó tr·ª£ kh√°m b·∫£o hi·ªÉm y t·∫ø kh√¥ng?',
    answer: 'C√≥, ph√≤ng kh√°m h·ªó tr·ª£ kh√°m v√† thanh to√°n b·∫±ng th·∫ª b·∫£o hi·ªÉm y t·∫ø theo quy ƒë·ªãnh.'
  },
  {
    question: 'T√¥i c√≥ th·ªÉ ƒë·∫∑t l·ªãch kh√°m cho ng∆∞·ªùi th√¢n kh√¥ng?',
    answer: 'B·∫°n ho√†n to√†n c√≥ th·ªÉ ƒë·∫∑t l·ªãch kh√°m cho ng∆∞·ªùi th√¢n, ch·ªâ c·∫ßn ƒëi·ªÅn th√¥ng tin c·ªßa ng∆∞·ªùi c·∫ßn kh√°m v√†o form.'
  },
  {
    question: 'C√≥ d·ªãch v·ª• kh√°m t·∫°i nh√† kh√¥ng?',
    answer: 'Ph√≤ng kh√°m c√≥ h·ªó tr·ª£ d·ªãch v·ª• kh√°m t·∫°i nh√† cho ng∆∞·ªùi cao tu·ªïi ho·∫∑c kh√≥ di chuy·ªÉn. Vui l√≤ng li√™n h·ªá hotline ƒë·ªÉ bi·∫øt th√™m chi ti·∫øt.'
  },
];

export default function Chatbot() {
  const [selected, setSelected] = useState(null);
  const [input, setInput] = useState("");
  const [history, setHistory] = useState([]);
  const [showQuick, setShowQuick] = useState(false);

  function handleAsk(e) {
    e.preventDefault();
    const trimmed = input.trim();
    if (!trimmed) return;
    // T√¨m c√¢u tr·∫£ l·ªùi ph√π h·ª£p
    const found = QUESTIONS.find(q => trimmed.toLowerCase() === q.question.toLowerCase());
    if (found) {
      setHistory([...history, { q: trimmed, a: found.answer }]);
    } else {
      setHistory([...history, { q: trimmed, a: 'Xin l·ªói, t√¥i ch∆∞a c√≥ c√¢u tr·∫£ l·ªùi cho c√¢u h·ªèi n√†y. Vui l√≤ng ch·ªçn c√¢u h·ªèi c√≥ s·∫µn ho·∫∑c li√™n h·ªá ph√≤ng kh√°m.' }]);
    }
    setInput("");
    setSelected(null);
  }

  function handleClickQuestion(idx) {
    setSelected(selected === idx ? null : idx);
    setInput(QUESTIONS[idx].question);
  }

  return (
    <div className="chatbot-box" style={{display: 'flex', flexDirection: 'column', height: 420, minWidth: 340, position: 'relative'}}>
      <h3 className="chatbot-title">Chatbot H·ªó Tr·ª£</h3>
      <div style={{flex: 1, overflowY: 'auto', paddingBottom: 12}}>
        {selected !== null && (
          <div className="chatbot-answer" style={{marginBottom: 10}}>{QUESTIONS[selected].answer}</div>
        )}
        {history.length > 0 && (
          <div className="chatbot-history" style={{marginTop: 8}}>
            <h4 style={{fontSize: 15, color: '#1abc9c', marginBottom: 8}}>L·ªãch s·ª≠ h·ªèi ƒë√°p</h4>
            <ul style={{listStyle: 'none', padding: 0, fontSize: 15}}>
              {history.map((item, i) => (
                <li key={i} style={{marginBottom: 10}}>
                  <div style={{fontWeight: 600}}><span style={{color:'#1abc9c'}}>B·∫°n:</span> {item.q}</div>
                  <div style={{marginLeft: 8}}><span style={{color:'#888'}}>Chatbot:</span> {item.a}</div>
                </li>
              ))}
            </ul>
          </div>
        )}
      </div>
      {/* N√∫t m·ªü c√¢u h·ªèi nhanh */}
      <div style={{display: 'flex', alignItems: 'center', gap: 8, marginTop: 4}}>
        <button
          className="chatbot-quick-toggle"
          onClick={() => setShowQuick(v => !v)}
          style={{background: '#e8f9f4', border: 'none', borderRadius: '50%', width: 36, height: 36, fontSize: 18, color: '#1abc9c', cursor: 'pointer'}}
          title="C√¢u h·ªèi nhanh"
        >
          <span role="img" aria-label="quick-questions">üí°</span>
        </button>
        {showQuick && (
          <div className="chatbot-quick-questions" style={{display: 'flex', flexDirection: 'column', gap: 8, background: '#f6f6f6', borderRadius: 12, padding: 10, boxShadow: '0 2px 8px #eee', position: 'absolute', bottom: 60, left: 0, right: 0, zIndex: 2, maxHeight: 220, overflowY: 'auto'}}>
            {QUESTIONS.map((item, idx) => (
              <button
                key={idx}
                className="chatbot-quick-btn"
                onClick={() => { handleClickQuestion(idx); setShowQuick(false); }}
                type="button"
                style={{
                  background: selected === idx ? '#1abc9c' : '#e8f9f4',
                  color: selected === idx ? '#fff' : '#1abc9c',
                  border: 'none',
                  borderRadius: 16,
                  padding: '7px 14px',
                  fontSize: 14,
                  cursor: 'pointer',
                  transition: 'background 0.2s',
                  textAlign: 'left',
                  whiteSpace: 'normal',
                  maxWidth: '100%',
                  minHeight: 0,
                }}
                title={item.question}
              >
                {item.question}
              </button>
            ))}
          </div>
        )}
        <form onSubmit={handleAsk} style={{display: 'flex', gap: 8, flex: 1}}>
          <input
            type="text"
            className="chatbot-input"
            placeholder="Nh·∫≠p c√¢u h·ªèi c·ªßa b·∫°n..."
            value={input}
            onChange={e => setInput(e.target.value)}
            style={{flex: 1, borderRadius: 20, border: '1px solid #1abc9c', padding: 10, fontSize: 15, background: '#f6f6f6'}}
          />
          <button type="submit" className="chatbot-ask-btn" style={{borderRadius: 20, background: '#1abc9c', color: '#fff', border: 'none', padding: '0 18px', fontWeight: 600}}>G·ª≠i</button>
        </form>
      </div>
    </div>
  );
}
